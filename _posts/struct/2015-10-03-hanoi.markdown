---

layout: post
title:  hanoi 塔
date:   2015-10-02 15:20:15
categories: 数据结构
tags: struct
excerpt: 设a,b,c 是三个塔座。开始时，在塔座a上有一叠共n个圆盘，这些圆盘自下而上，又大到小地

---

### 汉诺塔问题


设a,b,c 是三个塔座。开始时，在塔座a上有一叠共n个圆盘，这些圆盘自下而上，又大到小地
叠放在一起，各个圆盘从小到大编号为1，2...n，现在要求将塔座a上的这一叠圆盘移动到塔座
b上，并仍按同样顺序叠置，在移动圆盘时应遵守以下的移动规则：
规则（1) 每次只能移动一个圆盘；
规则（2）任何时候都不允许将较大的圆盘压在较小的圆盘之上；
规则 (3) 在满足前两条规则的前提下，可将圆盘移至a，b,c中任何一个塔座下。
这个问题是一个简单的解法。假设塔座a, b,c排成一个三角形，a,b，c，a构成一个时针循环。
在移动圆盘过程中，若是奇数次移动，则将最小的圆盘移到顺时针方向的下一座塔上。若是偶数次移动，
则保持最小的圆盘不动，而在其他两座塔之间，将较小的圆盘移动到另一塔座上去。
#### 代码如下：

{% highlight c %}
void hanoi(int n, int a, int b, int c)
{
	if(n > 0)
	{
		hanoi(n - 1, a, c, b);
		hanoi(a, b);
		hanoi(n-1, c, b, a);
	}
}
{% endhighlight %}



